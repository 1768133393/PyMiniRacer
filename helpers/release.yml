steps:
- {task: UsePythonVersion@0, inputs: {versionSpec: '2.7', architecture: x64}}
- bash: echo "##vso[task.prependpath]$(Build.SourcesDirectory)\\py_mini_racer\\extension\\depot_tools\\"
- script: python setup.py build_ext
  displayName: Build the extension
- {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
- script: |
    pip install git+https://github.com/joerick/cibuildwheel.git@0375e92110113689025a5f05376f77d220d8b5c9
    cibuildwheel --output-dir wheelhouse .
  env:
    CIBW_BEFORE_BUILD: "git clean -ffdx -e py_mini_racer/extension/out py_mini_racer/extension || true"
    CIBW_SKIP: "*-manylinux1_i686 *-win32"
    CIBW_TEST_REQUIRES: mock pytest pytest-azurepipelines
    CIBW_TEST_COMMAND: pytest {project}/tests
  displayName: Build the Wheelhouse
- script: |
    pip install auditwheel
    python helpers/wheel_pymalloc.py wheelhouse
  displayName: Patch the Wheelhouse
- script: |
    pip install twine readme_renderer[md]
    twine check wheelhouse/*.whl
  displayName: Check the wheels
- task: PublishBuildArtifacts@1
  inputs: {pathtoPublish: "wheelhouse"}
- task: S3Upload@1
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: Publish Wheelhouse to S3
  inputs:
    awsCredentials: AWS
    bucketName: sqreen-pyminiracer-travis-artefact
    globExpressions: |
      *.whl
      *.tar.gz
    targetFolder: $(Build.SourceVersion)/dist
    sourceFolder: wheelhouse
    flattenFolders: true
