trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
  paths:
    include:
    - helpers/v8_build.py
    - py_mini_racer/extension/*

jobs:
- job: linux
  displayName: Build on Linux
  pool: {vmImage: 'Ubuntu-16.04'}
  variables:
    plat_name: "manylinux1_x86_64"
  steps:
   - checkout: self
   - {task: UsePythonVersion@0, inputs: {versionSpec: '2.7', architecture: x64}}
   - script: |
       python helpers/v8_build.py --target py_mini_racer_shared_lib
       cp py_mini_racer/extension/out/libmini_racer.so py_mini_racer/libmini_racer.glibc.so
     displayName: Build the extension
- job: mac
  displayName: Build on macOS
  pool: {vmImage: 'macOS-10.14'}
  variables:
    plat_name: "macosx_10_9_x86_64"
  steps:
   - checkout: self
   - {task: UsePythonVersion@0, inputs: {versionSpec: '2.7', architecture: x64}}
   - script: |
       python helpers/v8_build.py --target py_mini_racer_shared_lib
       cp py_mini_racer/extension/out/libmini_racer.dylib py_mini_racer/libmini_racer.dylib
     displayName: Build the extension
- job: windows
  displayName: Build on Windows
  pool: {vmImage: 'vs2017-win2016'}
  variables:
    plat_name: "win_amd64"
  steps:
   - script: git config --global core.symlinks true
   - checkout: self
   - powershell: |
       Remove-Item C:\ProgramData\Chocolatey\bin\python2.7.exe -force
       Remove-Item C:\ProgramData\Chocolatey\bin\python2.exe -force
     displayName: Remove extraneous Python Interpreters
   - {task: UsePythonVersion@0, inputs: {versionSpec: '2.7', architecture: x64}}
   - bash: echo "##vso[task.prependpath]$(Build.SourcesDirectory)\\py_mini_racer\\extension\\depot_tools\\"
   - script: |
       python helpers/v8_build.py --target py_mini_racer_shared_lib
       cp py_mini_racer/extension/out/mini_racer.dll py_mini_racer/mini_racer.dll
     displayName: Build the extension
- job: fetch_sources_for_alpine
  displayName: Prepare build for Alpine Linux
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
   - task: UsePythonVersion@0
     inputs:
       versionSpec: '2.7'
       architecture: x64
   - checkout: self
   - bash: python helpers/v8_build.py --no-build --no-sysroot
     displayName: Download V8 sources
   - bash: tar -czf v8.tar.gz py_mini_racer/extension
     displayName: Archive V8 sources
   - publish: v8.tar.gz
     artifact: sources-for-alpine
- job: alpine
  displayName: Build on Alpine Linux
  dependsOn:
   - fetch_sources_for_alpine
  container: nicolassqreen/azure-pipelines-container-alpine-python:latest
  steps:
   - checkout: self
   - download: current
     artifact: sources-for-alpine
   - bash: |
       echo Extracting in $PWD
       tar -xf $(Pipeline.Workspace)/sources-for-alpine/v8.tar.gz
     displayName: Extract V8 sources
   - bash: |
       sudo apk add ninja llvm lld linux-headers
       cp -f /usr/local/bin/gn py_mini_racer/extension/v8/buildtools/linux64/gn
       rm -f py_mini_racer/extension/depot_tools/ninja
     displayName: Prepare Aline Linux build environment
   - bash: |
       python helpers/v8_build.py --no-update --no-sysroot --target py_mini_racer_shared_lib
       cp py_mini_racer/extension/out/libmini_racer.so py_mini_racer/libmini_racer.muslc.so
     displayName: Build the extension
